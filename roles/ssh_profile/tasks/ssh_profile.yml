---
- name: Ensure ~/.ssh directory exists with mode 0700
  ansible.builtin.file:
    path: "{{ ssh_profile_target_dir }}"
    state: directory
    mode: "0700"

- name: Run proton-sync systemd user service once
  ansible.builtin.systemd:
    name: proton-sync
    state: started
    scope: user
  when: proton_drive_rclone is defined and proton_drive_rclone | bool

- name: Check if protondrive directory exists
  ansible.builtin.stat:
    path: "{{ ssh_profile_protondrive_dir }}"
  register: protondrive_dir
  ignore_errors: true

- name: Check if protondrive SSH profile directory exists
  ansible.builtin.stat:
    path: "{{ ssh_profile_protondrive_ssh_dir }}"
  register: protondrive_ssh_dir
  ignore_errors: true

- name: Debug - Found protondrive SSH profile folder
  ansible.builtin.debug:
    msg: Found protondrive SSH profile at {{ ssh_profile_protondrive_ssh_dir }}
  when: protondrive_dir.stat.exists and protondrive_ssh_dir.stat.exists

- name: Find all files in the protondrive SSH profile directory
  ansible.builtin.find:
    paths: "{{ ssh_profile_protondrive_ssh_dir }}"
    file_type: file
  register: protondrive_ssh_files
  when: protondrive_ssh_dir.stat.exists

- name: Create symlinks for SSH profile files from protondrive
  ansible.builtin.file:
    src: "{{ item.path }}"
    dest: "{{ ssh_profile_target_dir }}/{{ item.path | basename }}"
    state: link
    force: true
  loop: "{{ protondrive_ssh_files.files }}"
  when:
    - protondrive_ssh_dir.stat.exists
    - (item.path | basename) not in ssh_profile_exclude_files

- name: Set permissions on the local SSH directory recursively to 0700
  ansible.builtin.file:
    path: "{{ ssh_profile_target_dir }}"
    mode: "0700"
    recurse: true

- name: Find all files in the local SSH directory
  ansible.builtin.find:
    paths: "{{ ssh_profile_target_dir }}"
    file_type: file
  register: target_ssh_files

- name: Set file permissions in the local SSH directory
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: "{{ '0644' if (item.path | basename).endswith('.pub') else '0600' }}"
  loop: "{{ target_ssh_files.files }}"

- name: Check if authorized_keys exists
  ansible.builtin.stat:
    path: "{{ ssh_profile_target_dir }}/authorized_keys"
  register: authorized_keys_stat

- name: Ensure authorized_keys has mode 711
  ansible.builtin.file:
    path: "{{ ssh_profile_target_dir }}/authorized_keys"
    mode: "0711"
  when: authorized_keys_stat.stat.exists
