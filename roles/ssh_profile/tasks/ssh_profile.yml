---
- name: Ensure ~/.ssh directory exists with mode 0700
  ansible.builtin.file:
    path: "{{ ssh_profile_target_dir }}"
    state: directory
    mode: "0700"

- name: Run proton-sync systemd user service once
  ansible.builtin.systemd:
    name: proton-sync
    state: started
    scope: user
  when: proton_drive_rclone is defined and proton_drive_rclone | bool

- name: Check if protondrive directory exists
  ansible.builtin.stat:
    path: "{{ ssh_profile_protondrive_dir }}"
  register: ssh_profile_dir
  ignore_errors: true

- name: Check if protondrive SSH profile directory exists
  ansible.builtin.stat:
    path: "{{ ssh_profile_protondrive_ssh_dir }}"
  register: ssh_profile_ssh_dir
  ignore_errors: true

- name: Debug - Found protondrive SSH profile folder
  ansible.builtin.debug:
    msg: Found protondrive SSH profile at {{ ssh_profile_protondrive_ssh_dir }}
  when: ssh_profile_dir.stat.exists and ssh_profile_ssh_dir.stat.exists

- name: Clean up unwanted files in SSH directory
  ansible.builtin.find:
    paths: "{{ ssh_profile_target_dir }}"
    patterns: "*"
    file_type: any
  register: ssh_profile_existing_ssh_items
  when: ssh_profile_ssh_dir.stat.exists

- name: Remove unwanted files and symlinks
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ ssh_profile_existing_ssh_items.files }}"
  when:
    - ssh_profile_ssh_dir.stat.exists
    - (item.path | basename) not in ssh_profile_exclude_files
    - not (item.path | basename).startswith('cm-')

- name: Create symlinks for specific SSH items from protondrive
  ansible.builtin.file:
    src: "{{ ssh_profile_protondrive_ssh_dir }}/{{ item }}"
    dest: "{{ ssh_profile_target_dir }}/{{ item }}"
    state: link
    force: true
  loop: "{{ ssh_profile_symlink_items }}"
  when: ssh_profile_ssh_dir.stat.exists

- name: Set permissions on the local SSH directory recursively to 0700
  ansible.builtin.file:
    path: "{{ ssh_profile_target_dir }}"
    mode: "0700"
    recurse: true

- name: Find all files in the local SSH directory
  ansible.builtin.find:
    paths: "{{ ssh_profile_target_dir }}"
    file_type: file
  register: ssh_profile_target_ssh_files

- name: Set file permissions in the local SSH directory
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: "{{ '0644' if (item.path | basename).endswith('.pub') else '0600' }}"
  loop: "{{ ssh_profile_target_ssh_files.files }}"

- name: Check if authorized_keys exists
  ansible.builtin.stat:
    path: "{{ ssh_profile_target_dir }}/authorized_keys"
  register: ssh_profile_authorized_keys_stat

- name: Ensure authorized_keys has mode 0600
  ansible.builtin.file:
    path: "{{ ssh_profile_target_dir }}/authorized_keys"
    mode: "0600"
  when: ssh_profile_authorized_keys_stat.stat.exists
