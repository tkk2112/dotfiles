- name: Install rclone
  ansible.builtin.command:
    cmd: go install github.com/rclone/rclone@latest
  environment:
    GOPATH: "{{ gopath }}"
  args:
    creates: "{{ gopath }}/bin/rclone"

- name: Ensure rclone config directory exists
  ansible.builtin.file:
    path: "~/.config/rclone"
    state: directory
    mode: "0700"

- name: Check if rclone config exists
  ansible.builtin.stat:
    path: "~/.config/rclone/rclone.conf"
  register: rclone_config

- name: Check for client_access_token in config
  ansible.builtin.command:
    cmd: grep -q "client_access_token" ~/.config/rclone/rclone.conf
  register: token_check
  failed_when: false
  changed_when: false
  when: rclone_config.stat.exists

- name: Configure rclone for ProtonDrive
  ansible.builtin.copy:
    dest: "~/.config/rclone/rclone.conf"
    content: |
      [protondrive]
      type = protondrive
    mode: "0600"
  when: not rclone_config.stat.exists or (token_check.rc != 0)

- name: "Ask for Proton username"
  ansible.builtin.pause:
    prompt: "Enter Proton username: "
    echo: true
  register: proton_username
  no_log: true
  when: not rclone_config.stat.exists or (token_check.rc != 0)

- name: "Ask for Proton password"
  ansible.builtin.pause:
    prompt: "Enter Proton password: "
    echo: false
  register: proton_password
  no_log: true
  when: not rclone_config.stat.exists or (token_check.rc != 0)

- name: "Ask for Proton 2FA"
  ansible.builtin.pause:
    prompt: "Enter Proton 2FA: "
    echo: true
  register: proton_2fa
  no_log: true
  when: not rclone_config.stat.exists or (token_check.rc != 0)

- name: Obscure the password using rclone
  ansible.builtin.command:
    cmd: rclone obscure {{ proton_password.user_input }}
  register: obscured_password
  no_log: true
  when: not rclone_config.stat.exists or (token_check.rc != 0)
  changed_when: false

- name: Login to ProtonDrive to store client_access_token
  ansible.builtin.command:
    # yamllint disable-line rule:line-length
    cmd: "rclone about protondrive: --protondrive-username {{ proton_username.user_input }} --protondrive-password {{ obscured_password.stdout }} --protondrive-2fa={{ proton_2fa.user_input }}"
  no_log: true
  when: not rclone_config.stat.exists or (token_check.rc != 0)
  changed_when: false

- name: Create sync script
  ansible.builtin.copy:
    dest: "~/sync-protondrive.sh"
    content: |
      #!/bin/bash
      rclone sync /path/to/local/folder protondrive:remote/folder --progress
    mode: "0755"

- name: Ensure rclone config has correct permissions
  ansible.builtin.file:
    path: "~/.config/rclone/rclone.conf"
    mode: "0600"
