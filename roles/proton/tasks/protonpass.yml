---
- name: Download ProtonPass version information
  ansible.builtin.uri:
    url: https://proton.me/download/PassDesktop/linux/x64/version.json
    return_content: true
  register: proton_version_info

- name: Download ProtonPass DEB package
  ansible.builtin.get_url:
    url: "{{ (proton_version_info.content | from_json).Releases[0].File[0].Url }}"
    dest: "{{ ansible_tmp }}/ProtonPass.deb"
    checksum: sha512:{{ (proton_version_info.content | from_json).Releases[0].File[0].Sha512CheckSum }}
    mode: "0644"
  when: ansible_distribution in ['Debian', 'Ubuntu']

- name: Install ProtonPass DEB package
  ansible.builtin.apt:
    deb: "{{ ansible_tmp }}/ProtonPass.deb"
    state: present
  become: true
  when: ansible_distribution in ['Debian', 'Ubuntu']

- name: Clean up downloaded DEB file
  ansible.builtin.file:
    path: "{{ ansible_tmp }}/ProtonPass.deb"
    state: absent
  when: ansible_distribution in ['Debian', 'Ubuntu']

- name: Download ProtonPass rpm package
  ansible.builtin.get_url:
    url: "{{ (proton_version_info.content | from_json).Releases[0].File[1].Url }}"
    dest: "{{ ansible_tmp }}/ProtonPass.rpm"
    checksum: sha512:{{ (proton_version_info.content | from_json).Releases[0].File[1].Sha512CheckSum }}
    mode: "0644"
  when: ansible_distribution == 'Fedora'

- name: Install ProtonPass rpm package
  ansible.builtin.dnf:
    name: "{{ ansible_tmp }}/ProtonPass.rpm"
    state: present
    disable_gpg_check: true
  become: true
  when: ansible_distribution == 'Fedora'

- name: Clean up downloaded rpm file
  ansible.builtin.file:
    path: "{{ ansible_tmp }}/ProtonPass.rpm"
    state: absent
  when: ansible_distribution == 'Fedora'
