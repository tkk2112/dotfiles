name: BuildDistros

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: ["main"]
    paths:
      - ".github/distros/Dockerfile*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changed_files:
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-dockerfiles.outputs.any_changed }}

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - id: changed-dockerfiles
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files: .github/distros/Dockerfile.**

  setup:
    needs: changed_files
    if: ${{ needs.changed_files.outputs.any_changed == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - run: mkdir -p .dockerfile-hashes
      - uses: actions/cache/restore@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        id: cache-restore
        with:
          path: .dockerfile-hashes
          key: dockerfile-hashes-
          restore-keys: dockerfile-hashes-
      - id: set-matrix
        run: |
          DOCKERFILES=$(find .github/distros -name "Dockerfile.*" -type f | sort)
          JSON_ARRAY="["

          echo "Found Dockerfiles:"
          echo "$DOCKERFILES"

          for file in $DOCKERFILES; do
            # Extract the part after the dot from the filename
            TAG_NAME=$(basename $file | sed 's/Dockerfile\.//')

            # Get the hash of the file content
            FILE_HASH=$(git hash-object $file)
            HASH_FILE=".dockerfile-hashes/${TAG_NAME}.hash"

            echo "Processing $file (tag: $TAG_NAME, hash: $FILE_HASH)"

            # Check if we need to rebuild this image
            NEEDS_REBUILD=true
            if [ -f "$HASH_FILE" ] && [ "$(cat $HASH_FILE)" = "$FILE_HASH" ]; then
              echo "Skipping $file (hash unchanged): $FILE_HASH"
              NEEDS_REBUILD=false
            else
              echo "Need to rebuild $file - hash changed or not found"
            fi

            # Add to the JSON array if it needs rebuilding
            if [ "$NEEDS_REBUILD" = "true" ]; then
              if [ "$JSON_ARRAY" != "[" ]; then
                JSON_ARRAY="$JSON_ARRAY,"
              fi
              JSON_ARRAY="$JSON_ARRAY{\"file\":\"$file\",\"tag\":\"$TAG_NAME\",\"hash\":\"$FILE_HASH\"}"
            fi
          done

          JSON_ARRAY="$JSON_ARRAY]"
          echo "Matrix: $JSON_ARRAY"
          echo "matrix=$JSON_ARRAY" >> $GITHUB_OUTPUT


  build:
    needs: [changed_files, setup]
    if: ${{ needs.setup.outputs.matrix != '[]' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    outputs:
      image_updated: "true"
    strategy:
      matrix:
        dockerfile: ${{ fromJson(needs.setup.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ${{ matrix.dockerfile.file }}
          push: true
          tags: tkk2112/${{ matrix.dockerfile.tag }}:latest
          cache-from: type=registry,ref=tkk2112/${{ matrix.dockerfile.tag }}:latest
          cache-to: type=inline,mode=min

      - if: success()
        run: |
          mkdir -p .dockerfile-hashes
          echo "${{ matrix.dockerfile.hash }}" > ".dockerfile-hashes/${{ matrix.dockerfile.tag }}.hash"
          echo "Updated hash for ${{ matrix.dockerfile.tag }}: ${{ matrix.dockerfile.hash }}"

      - uses: actions/cache/save@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: .dockerfile-hashes
          key: dockerfile-hashes-${{ matrix.dockerfile.tag }}-${{ github.sha }}

  run-platform-tests-after-build:
    needs: [build]
    if: ${{ needs.build.result == 'success' }}
    uses: ./.github/workflows/platforms.yml

  run-platform-tests-if-no-changes:
    needs: [setup]
    if: ${{ needs.setup.outputs.matrix == '[]' && github.event_name != 'workflow_dispatch'}}
    uses: ./.github/workflows/platforms.yml

  run-platform-tests:
    needs: [changed_files]
    if: ${{ needs.changed_files.outputs.any_changed != 'true' && github.event_name != 'workflow_dispatch' }}
    uses: ./.github/workflows/platforms.yml

  test:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [run-platform-tests, run-platform-tests-if-no-changes, run-platform-tests-after-build]
    steps:
      - run: exit 1
        if: ${{ contains(toJSON(needs.*.result), 'failure') || contains(toJSON(needs.*.result), 'cancelled') }}
