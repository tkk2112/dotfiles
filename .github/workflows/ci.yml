name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  platform-run:
    name: "${{ matrix.task.name }} on ${{ matrix.os.name }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - name: debian:bookworm
            image: debian:bookworm
          # - name: debian:testing
          #   image: debian:testing
          #   continue-on-error: true
          # - name: ubuntu:24.04
          #   image: ubuntu:24.04
          #   continue-on-error: true
        task:
          - name: linter
            setup_args: "--only-lint"
            sh_args: "-x "
          - name: playbook
            setup_args: "--skip-lint -v"
            sh_args: "-x "
        exclude:
          - os: ubuntu
            task: playbook
    container:
      image: ${{ matrix.os.image }}
      # volumes:
      #   - /home/thomas/git/ansible:/workspace
    steps:
      - name: Install dependencies
        env:
          APT_PKGS: ${{ matrix.os.apt_pkgs || 'git curl sudo' }}
          DEBIAN_FRONTEND: "noninteractive"
        run: |
          apt -qq update </dev/null >/dev/null
          apt -qq install -y ${APT_PKGS} </dev/null >/dev/null

      - uses: actions/checkout@v4

      - name: Add user if needed
        run: |
          USERNAME="newuser"
          if getent passwd 1000 >/dev/null; then
            echo "User with UID 1000 already exists"
            USERNAME=$(getent passwd 1000 | cut -d: -f1)
          else
            echo "Creating user ${USERNAME} with UID/GID 1000"
            groupadd --gid 1000 ${USERNAME} || true
            useradd --uid 1000 --gid 1000 --create-home --shell /bin/bash ${USERNAME}
          fi

          echo "${USERNAME} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          echo "USERNAME=${USERNAME}" >> "$GITHUB_ENV"

          if [ -d /workspace ]; then
            echo "DOTFILES_LOCATION=/worspace" >> "$GITHUB_ENV"
            chown -R 1000:1000 /workspace
          else
            echo "DOTFILES_LOCATION=$GITHUB_WORKSPACE" >> "$GITHUB_ENV"
            chown -R 1000:1000 $GITHUB_WORKSPACE
          fi

      - name: Set commit variable
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "COMMIT=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          else
            echo "COMMIT=${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: "Exec task (${{ matrix.task.name }}): $ setup.sh ${{ matrix.task.setup_args }}"
        env:
          SETUP_ARGS: ${{ matrix.task.setup_args }}
          SH_ARGS: ${{ matrix.task.sh_args || '' }}

        run: |
          su --login --whitelist-environment=DOTFILES_LOCATION ${USERNAME} -c \
           "curl -LsS https://raw.githubusercontent.com/tkk2112/dotfiles/${COMMIT}/setup.sh | sh ${SH_ARGS}-s -- ${SETUP_ARGS}"
          # su --login --whitelist-environment=DOTFILES_LOCATION ${USERNAME} --command="sh ${SH_ARGS} ${DOTFILES_LOCATION}/setup.sh ${SETUP_ARGS}"

  standard-run:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Verify url shortener is pointing to latest setup.sh
        run: |
          GITHUB_URL="https://raw.githubusercontent.com/tkk2112/dotfiles/refs/heads/main/setup.sh"
          CUSTOM_URL="https://link.m04r.space/dotfiles"

          # Get content from both URLs
          GITHUB_CONTENT=$(curl -Ls "$GITHUB_URL")
          GITHUB_CHECKSUM=$(curl -Ls "$GITHUB_URL" | sha256sum | cut -d' ' -f1)
          CUSTOM_CHECKSUM=$(curl -Ls "$CUSTOM_URL" | sha256sum | cut -d' ' -f1)

          echo "Comparing checksums:"
          echo "GitHub ($GITHUB_URL): $GITHUB_CHECKSUM"
          echo "Custom ($CUSTOM_URL): $CUSTOM_CHECKSUM"

          if [ "$GITHUB_CHECKSUM" != "$CUSTOM_CHECKSUM" ]; then
            echo "Error: Custom URL content checksum differs from GitHub URL content checksum"
            exit 1
          fi

      - name: Run setup script as advertised in README.md
        env:
          APT_PKGS: "apt-utils curl sudo"
          USERNAME: "newuser"
          DEBIAN_FRONTEND: "noninteractive"
        uses: docker://debian:latest
        with:
          entrypoint: bash
          args: >-
            -c "apt -qq update </dev/null >/dev/null && apt -qq install -y ${APT_PKGS} </dev/null >/dev/null &&
            useradd -m -s /bin/bash ${USERNAME} &&
            echo '${USERNAME} ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers &&
            su - ${USERNAME} -c 'curl -LsS https://link.m04r.space/dotfiles | sh'"
