name: TestDistros

on:
  workflow_call:

jobs:
  check:
    name: check'n'test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-5|${{ hashFiles('uv.lock') }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - run: uv run alias check
      - run: uv run alias test

  platform-run:
    name: ${{ matrix.task.name }} on ${{ matrix.os.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - name: debian:trixie
            image: jrei/systemd-debian:13
          - name: ubuntu:24.04
            image: jrei/systemd-ubuntu:24.04
            pkgs: 'git curl sudo python3-six'
        task:
          - name: linter
            setup_args: "--only-lint"
          - name: playbook
            setup_args: "--skip-lint"
    container:
      image: ${{ matrix.os.image }}
      options: ${{ matrix.os.options || '--privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro' }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Setup and run dotfiles
        id: setup_run
        uses: ./.github/actions/setup-and-run-dotfiles-linux
        with:
          pkgs: ${{ matrix.os.pkgs || 'git curl sudo' }}
          setup_args: ${{ matrix.task.setup_args }}
          sh_args: ${{ matrix.task.sh_args || '' }}
          task_name: ${{ matrix.task.name }}
          workspace_path: ${{ github.workspace }}

  fedora-run:
    name: ${{ matrix.task.name }} on tkk2112/fedora-42-cosmic-spin:latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task:
          - name: linter
            setup_args: "--only-lint"
          - name: playbook
            setup_args: "--skip-lint"
    container:
      image: tkk2112/fedora-42-cosmic-spin:latest
      options: '--privileged --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:ro'
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Setup and run dotfiles
        id: setup_run
        uses: ./.github/actions/setup-and-run-dotfiles-linux
        with:
          pkgs: 'git curl sudo'
          setup_args: ${{ matrix.task.setup_args }}
          sh_args: ''
          task_name: ${{ matrix.task.name }}
          workspace_path: ${{ github.workspace }}
      - if: ${{ matrix.task.name == 'playbook' }}
        shell: bash
        run: |
          cd ${DOTFILES_LOCATION:-${{ github.workspace }}}
          ./addons.sh sanity -v


  macos-run:
    name: ${{ matrix.task.name }} on macos-latest
    runs-on: macos-latest
    strategy:
      matrix:
        task:
          - name: linter
            setup_args: "--only-lint"
          - name: playbook
            setup_args: "--skip-lint"
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Setup and run dotfiles for macOS
        uses: ./.github/actions/setup-and-run-dotfiles-macos
        with:
          setup_args: ${{ matrix.task.setup_args }}
          sh_args: ${{ matrix.task.sh_args || '' }}
          task_name: ${{ matrix.task.name }}

  test:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [platform-run, fedora-run, macos-run]
    steps:
      - run: exit 1
        if: ${{ contains(toJSON(needs.*.result), 'failure') || contains(toJSON(needs.*.result), 'cancelled') }}
