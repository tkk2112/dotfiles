name: TestDistros

on:
  workflow_call:

jobs:
  check:
    name: check'n'test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6.1.0
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-5|${{ hashFiles('uv.lock') }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - run: uv run alias check
      - run: uv run alias test

  platform-run:
    name: ${{ matrix.task.name }} on ${{ matrix.os.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          # - name: debian:bookworm
          #   image: jrei/systemd-debian:12
          # - name: debian:trixie
          #   image: jrei/systemd-debian:13

          - name: ubuntu:24.04
            image: jrei/systemd-ubuntu:24.04
            pkgs: 'git curl sudo python3-six'
          - name: tkk2112/fedora-42-cosmic-spin:latest
            image: tkk2112/fedora-42-cosmic-spin:latest
            continue-on-error: true
            options: "--privileged --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:ro"
        task:
          # - name: linter
          #   setup_args: "--only-lint"
          - name: playbook
            setup_args: "-vvv --skip-lint"
    container:
      image: ${{ matrix.os.image }}
      options: ${{ matrix.os.options || '--privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro' }}
    steps:
      - name: Install dependencies
        env:
          PKGS: ${{ matrix.os.pkgs || 'git curl sudo' }}
          DEBIAN_FRONTEND: "noninteractive"
        run: |
          if command -v apt &> /dev/null; then
            apt -qq update </dev/null >/dev/null
            apt -qq install -y ${PKGS} </dev/null >/dev/null
          elif command -v dnf &> /dev/null; then
            dnf -y install ${PKGS} </dev/null >/dev/null
          else
            echo "Unsupported package manager"
            exit 1
          fi

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup user
        id: user_setup
        uses: ./.github/actions/setup-user
        with:
          workspace_path: ${{ github.workspace }}

      - name: Set environment variables
        run: |
          echo "USERNAME=${{ steps.user_setup.outputs.username }}" >> "$GITHUB_ENV"
          echo "DOTFILES_LOCATION=${{ steps.user_setup.outputs.dotfiles_location }}" >> "$GITHUB_ENV"

      - name: Set commit variable
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "COMMIT=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          else
            echo "COMMIT=${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: "Exec task (${{ matrix.task.name }}): $ setup.sh ${{ matrix.task.setup_args }}"
        env:
          SETUP_ARGS: ${{ matrix.task.setup_args }}
          SH_ARGS: ${{ matrix.task.sh_args || '' }}

        run: |
          su --login --whitelist-environment=DOTFILES_LOCATION ${USERNAME} -c \
           "sudo visudo -c && curl -LsS https://raw.githubusercontent.com/tkk2112/dotfiles/${COMMIT}/setup.sh | sh ${SH_ARGS}-s -- ${SETUP_ARGS}"

  macos-run:
    name: ${{ matrix.task.name }} on macos-latest
    runs-on: macos-latest
    strategy:
      matrix:
        task:
          - name: linter
            setup_args: "--only-lint"
          # - name: playbook
          #   setup_args: "--skip-lint"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set commit variable
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "COMMIT=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          else
            echo "COMMIT=${{ github.sha }}" >> $GITHUB_ENV
          fi
          echo "DOTFILES_LOCATION=$GITHUB_WORKSPACE" >> "$GITHUB_ENV"

      - name: "Exec task (${{ matrix.task.name }}): $ setup.sh ${{ matrix.task.setup_args }}"
        env:
          SETUP_ARGS: ${{ matrix.task.setup_args }}
          SH_ARGS: ${{ matrix.task.sh_args || '' }}

        run: |
          curl -LsS https://raw.githubusercontent.com/tkk2112/dotfiles/${COMMIT}/setup.sh | sh ${SH_ARGS}-s -- ${SETUP_ARGS}

  test:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [platform-run, macos-run]
    steps:
      - run: exit 1
        if: ${{ contains(toJSON(needs.*.result), 'failure') || contains(toJSON(needs.*.result), 'cancelled') }}
