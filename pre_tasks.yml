---
- name: Determine hostvar defaults based on OS
  ansible.builtin.set_fact:
    hostvars_defaults: "{{ ('debian' if ansible_distribution in ['Debian', 'Ubuntu']
                            else ('fedora' if ansible_distribution == 'Fedora'
                            else ('macos' if ansible_distribution == 'MacOSX' else 'unknown'))) | trim }}"

- name: Fail for unsupported distributions
  ansible.builtin.fail:
    msg: "Unsupported distribution: {{ ansible_distribution }}"
  when: hostvars_defaults == "unknown"

- name: Check if host_vars/distributions/<distribution>.yml file exists
  ansible.builtin.stat:
    path: host_vars/distributions/{{ hostvars_defaults }}.yml
  register: hostvars_distributionfile

- name: Load os specific variables if available
  ansible.builtin.include_vars: host_vars/distributions/{{ hostvars_defaults }}.yml
  when: hostvars_distributionfile.stat.exists

- name: Get system hostname
  ansible.builtin.command: hostname
  register: system_hostname
  changed_when: true

- name: Set hostname fact
  ansible.builtin.set_fact:
    ansible_hostname: "{{ system_hostname.stdout }}"

- name: Check if host_vars/hosts/<hostname>.yml file exists
  ansible.builtin.stat:
    path: host_vars/hosts/{{ ansible_hostname }}.yml
  register: hostvars_hostfile

- name: Prompt for continuation if file doesn't exist
  ansible.builtin.pause:
    prompt: host_vars/hosts/{{ ansible_hostname }}.yml doesn't exist. Press ENTER to continue or Ctrl+C to abort
  when: not hostvars_hostfile.stat.exists

- name: Load host-specific variables if available
  ansible.builtin.include_vars: host_vars/hosts/{{ ansible_hostname }}.yml
  when: hostvars_hostfile.stat.exists

- name: Fail if justauser and personal are both true
  ansible.builtin.fail:
    msg: "ERROR: justauser and personal cannot both be set to true simultaneously"
  when: justauser | default(false) | bool and personal | default(false) | bool

- name: Add NOPASSWD Entry for User
  community.general.sudoers:
    name: NOPASSWD-for-{{ ansible_user_id }}
    user: "{{ ansible_user_id }}"
    commands: ALL
    nopassword: true
    state: present
  become: true
  when: not justauser | bool

- name: Include additional fact gathering tasks
  ansible.builtin.import_tasks:
    file: fact_gatherer.yml

- name: Process conditional role activation
  ansible.builtin.set_fact:
    derived_roles:
      gpg: "{{ personal | default(false) | bool or install_roles.gpg | default(default_roles.gpg) | bool }}"
      proton: "{{ personal | default(false) | bool or install_roles.proton | default(default_roles.proton) | bool }}"
      ssh_profile: "{{ personal | default(false) | bool or install_roles.ssh_profile | default(default_roles.ssh_profile) | bool }}"

- name: Combine role configurations
  ansible.builtin.set_fact:
    effective_roles: "{{ default_roles | combine(install_roles | default({})) | combine(derived_roles) }}"
